import { useState, useEffect } from "react";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { GameItem } from "./GameItem";
import { CapybaraCharacter } from "./CapybaraCharacter";

export const AnimationDemo = () => {
  const [currentDemo, setCurrentDemo] = useState<string>('idle');
  const [showEffect, setShowEffect] = useState(false);
  const [score, setScore] = useState(0);
  const [lives, setLives] = useState(3);

  // –ê–≤—Ç–æ—Å–±—Ä–æ—Å —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
  useEffect(() => {
    if (showEffect) {
      const timer = setTimeout(() => setShowEffect(false), 2000);
      return () => clearTimeout(timer);
    }
  }, [showEffect]);

  const triggerAnimation = (type: string) => {
    setCurrentDemo(type);
    setShowEffect(true);
    
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—á–µ—Ç–∞/–∂–∏–∑–Ω–µ–π
    if (type === 'happy') {
      setScore(prev => prev + 10);
    } else if (type === 'sad') {
      setLives(prev => Math.max(0, prev - 1));
    }
  };

  const resetDemo = () => {
    setCurrentDemo('idle');
    setShowEffect(false);
    setScore(0);
    setLives(3);
  };

  return (
    <div className="min-h-screen streaming-bg p-4">
      <div className="container mx-auto max-w-6xl">
        {/* Header */}
        <Card className="mb-6 p-6 bg-card/90 backdrop-blur-sm">
          <h1 className="text-3xl font-bold neon-text mb-2">
            üé≠ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ê–Ω–∏–º–∞—Ü–∏–π
          </h1>
          <p className="text-muted-foreground">
            –ù–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏ —ç—Ñ—Ñ–µ–∫—Ç—ã
          </p>
        </Card>

        {/* Main Demo Area */}
        <div className="grid lg:grid-cols-2 gap-6 mb-6">
          {/* Character Demo */}
          <Card className="p-6 bg-card/90 backdrop-blur-sm">
            <h2 className="text-xl font-bold mb-4">üêπ –ê–Ω–∏–º–∞—Ü–∏–∏ –ö–∞–ø–∏–±–∞—Ä—ã</h2>
            
            {/* Game Stats */}
            <div className="flex justify-between mb-6">
              <div className="game-counter">
                <span className="text-accent">–°—á–µ—Ç:</span> {score}
              </div>
              <div className="game-counter">
                <span className="text-destructive">‚ù§Ô∏è</span> {lives}
              </div>
            </div>

            {/* Character Display */}
            <div className="relative h-48 flex items-center justify-center mb-6">
              <CapybaraCharacter mood={currentDemo as any} />
              
              {/* Floating Effects */}
              {showEffect && currentDemo === 'happy' && (
                <div className="absolute -top-8 left-1/2 transform -translate-x-1/2 text-2xl animate-bounce z-10">
                  ‚ú® +10 ‚ú®
                </div>
              )}
              
              {showEffect && currentDemo === 'sad' && (
                <div className="absolute -top-8 left-1/2 transform -translate-x-1/2 text-2xl animate-float z-10">
                  üíî -1
                </div>
              )}
            </div>

            {/* Animation Controls */}
            <div className="grid grid-cols-2 gap-3">
              <Button
                variant={currentDemo === 'idle' ? 'default' : 'outline'}
                onClick={() => setCurrentDemo('idle')}
                className="text-sm"
              >
                üò¥ Idle
              </Button>
              <Button
                variant={currentDemo === 'catching' ? 'default' : 'outline'}
                onClick={() => triggerAnimation('catching')}
                className="text-sm"
              >
                ü§∏ Catching
              </Button>
              <Button
                variant={currentDemo === 'happy' ? 'default' : 'outline'}
                onClick={() => triggerAnimation('happy')}
                className="text-sm"
              >
                üòÑ Happy
              </Button>
              <Button
                variant={currentDemo === 'sad' ? 'default' : 'outline'}
                onClick={() => triggerAnimation('sad')}
                className="text-sm"
              >
                üò¢ Sad
              </Button>
            </div>
            
            <Button
              variant="outline"
              onClick={() => triggerAnimation('defeated')}
              className="w-full mt-3 text-sm"
            >
              üíÄ Defeated
            </Button>
          </Card>

          {/* Object Demo */}
          <Card className="p-6 bg-card/90 backdrop-blur-sm">
            <h2 className="text-xl font-bold mb-4">üéÆ –ê–Ω–∏–º–∞—Ü–∏–∏ –û–±—ä–µ–∫—Ç–æ–≤</h2>
            
            {/* Positive Items */}
            <div className="mb-6">
              <h3 className="text-lg font-semibold mb-3 text-accent">
                ‚ú® –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ (–Ω—É–∂–Ω–æ –ª–æ–≤–∏—Ç—å)
              </h3>
              <div className="grid grid-cols-4 gap-4">
                <div className="text-center">
                  <div className={`game-item-positive ${showEffect ? 'animate-scale-out' : ''}`}>
                    <GameItem type="like" />
                  </div>
                  <p className="text-xs mt-2">Like +10</p>
                </div>
                <div className="text-center">
                  <div className={`game-item-positive ${showEffect ? 'animate-scale-out' : ''}`}>
                    <GameItem type="donate" />
                  </div>
                  <p className="text-xs mt-2">Donate +10</p>
                </div>
                <div className="text-center">
                  <div className={`game-item-positive ${showEffect ? 'animate-scale-out' : ''}`}>
                    <GameItem type="subscribe" />
                  </div>
                  <p className="text-xs mt-2">Sub +10</p>
                </div>
                <div className="text-center">
                  <div className={`game-item-positive ${showEffect ? 'animate-scale-out' : ''}`}>
                    <GameItem type="verify" />
                  </div>
                  <p className="text-xs mt-2">Verify +25</p>
                </div>
              </div>
            </div>

            {/* Negative Items */}
            <div className="mb-6">
              <h3 className="text-lg font-semibold mb-3 text-destructive">
                üí• –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ (–Ω—É–∂–Ω–æ –∏–∑–±–µ–≥–∞—Ç—å)
              </h3>
              <div className="grid grid-cols-3 gap-4">
                <div className="text-center">
                  <div className={`game-item-negative ${showEffect ? 'animate-pulse' : ''}`}>
                    <GameItem type="dislike" />
                  </div>
                  <p className="text-xs mt-2">Dislike -1‚ù§Ô∏è</p>
                </div>
                <div className="text-center">
                  <div className={`game-item-negative ${showEffect ? 'animate-pulse' : ''}`}>
                    <GameItem type="hate" />
                  </div>
                  <p className="text-xs mt-2">Hate -1‚ù§Ô∏è</p>
                </div>
                <div className="text-center">
                  <div className={`game-item-negative ${showEffect ? 'animate-pulse' : ''}`}>
                    <GameItem type="ban" />
                  </div>
                  <p className="text-xs mt-2">Ban -1‚ù§Ô∏è</p>
                </div>
              </div>
            </div>

            {/* Effect Triggers */}
            <div className="space-y-2">
              <Button
                onClick={() => setShowEffect(true)}
                className="w-full game-button text-sm"
              >
                üåü –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç—ã –ª–æ–≤–ª–∏
              </Button>
              <Button
                variant="outline"
                onClick={resetDemo}
                className="w-full text-sm"
              >
                üîÑ –°–±—Ä–æ—Å–∏—Ç—å –¥–µ–º–æ
              </Button>
            </div>
          </Card>
        </div>

        {/* Animation Details */}
        <Card className="p-6 bg-card/90 backdrop-blur-sm">
          <h2 className="text-xl font-bold mb-4">üìã –û–ø–∏—Å–∞–Ω–∏–µ –ê–Ω–∏–º–∞—Ü–∏–π</h2>
          <div className="grid md:grid-cols-2 gap-6">
            <div>
              <h3 className="font-semibold mb-3 text-primary">–ü–µ—Ä—Å–æ–Ω–∞–∂:</h3>
              <ul className="space-y-2 text-sm">
                <li><code className="bg-muted px-2 py-1 rounded">idle</code> - –°–ø–æ–∫–æ–π–Ω–æ–µ –ø–æ–∫–∞—á–∏–≤–∞–Ω–∏–µ</li>
                <li><code className="bg-muted px-2 py-1 rounded">catching</code> - –ê–∫—Ç–∏–≤–Ω—ã–π –æ—Ç—Å–∫–æ–∫ –ø—Ä–∏ –ª–æ–≤–ª–µ</li>
                <li><code className="bg-muted px-2 py-1 rounded">happy</code> - –ü—É–ª—å—Å–∏—Ä—É—é—â–µ–µ —Å–≤–µ—á–µ–Ω–∏–µ</li>
                <li><code className="bg-muted px-2 py-1 rounded">sad</code> - –î—Ä–æ–∂–∞–Ω–∏–µ –ø—Ä–∏ —É—Ä–æ–Ω–µ</li>
                <li><code className="bg-muted px-2 py-1 rounded">defeated</code> - –°–∫–æ–ª—å–∂–µ–Ω–∏–µ –≤–Ω–∏–∑</li>
              </ul>
            </div>
            <div>
              <h3 className="font-semibold mb-3 text-secondary">–û–±—ä–µ–∫—Ç—ã:</h3>
              <ul className="space-y-2 text-sm">
                <li><code className="bg-muted px-2 py-1 rounded">scale-out</code> - –ò—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ –ø—Ä–∏ –ª–æ–≤–ª–µ</li>
                <li><code className="bg-muted px-2 py-1 rounded">fade-out</code> - –ó–∞—Ç—É—Ö–∞–Ω–∏–µ –ø—Ä–∏ –ø—Ä–æ–ø—É—Å–∫–µ</li>
                <li><code className="bg-muted px-2 py-1 rounded">pulse</code> - –ö—Ä–∞—Å–Ω–æ–µ –º–∏–≥–∞–Ω–∏–µ —É—Ä–æ–Ω–∞</li>
                <li><code className="bg-muted px-2 py-1 rounded">float</code> - –ü–ª–∞–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤</li>
              </ul>
            </div>
          </div>
        </Card>

        {/* Back Button */}
        <div className="text-center mt-6">
          <Button
            variant="outline"
            onClick={() => window.location.reload()}
            className="px-8"
          >
            ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∏–≥—Ä–µ
          </Button>
        </div>
      </div>
    </div>
  );
};